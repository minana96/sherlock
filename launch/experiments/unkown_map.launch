<launch>
  <!-- Arguments -->
  <arg name="path_to_remote_ws" default="/home/milica/catkin_ws"/>
  <arg name="urdf_file" default="$(find xacro)/xacro --inorder '$(find turtlebot3_description)/urdf/turtlebot3_burger.urdf.xacro'"/>
  <arg name="publish_frequency" default="50.0"/>
  <arg name="offload_slam" default="false"/>
  <arg name="offload_navigation" default="false"/>
  <arg name="offload_obj_recognition" default="false"/>

  <!-- remote PC -->
  <machine name="remote_pc" address="192.168.1.9" env-loader="/opt/ros/melodic/env.sh" user="milica" default="never"/>
  
  <!-- urdf file of turtlebot3 -->
  <param name="robot_description" command="$(arg urdf_file)" />

  <!-- turtlebot3_robot -->
  <include file="$(find turtlebot3_bringup)/launch/turtlebot3_robot.launch"/>

  <!-- robot_state_publisher -->
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" value="$(arg publish_frequency)" />
  </node>

  <!-- raspicam_node -->
  <include file="$(find raspicam_node)/launch/camerav2_1280x960_10fps.launch"/>

  <!-- sherlock_controller -->
  <node pkg="sherlock" type="sherlock_controller.py" name="sherlock_controller" output="screen" required="true">
    <rosparam file="$(find sherlock)/config/desired_path.yaml" command="load" />
  </node>

  <!-- sherlock_obj_recognition_results -->
  <node pkg="sherlock" type="sherlock_obj_recognition_results.py" name="sherlock_obj_recognition" output="screen">
    <rosparam file="$(find sherlock)/config/objects_for_recognition.yaml" command="load" />
  </node>


  <!-- gmapping -->
  <group unless="$(arg offload_slam)"> 
    <include file="$(find sherlock_slam)/launch/sherlock_slam.launch"/>
  </group>

  <group if="$(arg offload_slam)"> 
    <include file="$(find sherlock_slam)/launch/sherlock_slam_remote.launch">
      <arg name="remote_machine_name" value="remote_pc"/>
      <arg name="path_to_remote_ws" value="$(arg path_to_remote_ws)"/>
    </include>
  </group>


  <!-- move_base -->
  <group unless="$(arg offload_navigation)"> 
    <include file="$(find sherlock_navigation)/launch/sherlock_navigation.launch"/>
  </group>

  <group if="$(arg offload_navigation)"> 
    <include file="$(find sherlock_navigation)/launch/sherlock_navigation_remote.launch">
      <arg name="remote_machine_name" value="remote_pc"/>
      <arg name="path_to_remote_ws" value="$(arg path_to_remote_ws)"/>
    </include>
  </group>


  <!-- find_object_2d -->
  <group unless="$(arg offload_obj_recognition)"> 
    <include file="$(find sherlock_obj_recognition)/launch/sherlock_pringles_recognition.launch"/>
  </group>

  <group if="$(arg offload_obj_recognition)"> 
    <include file="$(find sherlock_obj_recognition)/launch/sherlock_pringles_recognition_remote.launch">
      <arg name="remote_machine_name" value="remote_pc"/>
    </include>
  </group>
  
</launch>
